$ ps --> process running for that particular user
$ ps -ef --> process running in entire system

2 types of process in linux terminal 1)foreground 2)background
-> to runin background ex: $ sleep 20 &
-> to filter grep $ ps -ef | grep sleep | grep -v grep

$ kill -> request to stop , graceful termination
$ kill -9 -> force to stop
$ top -> running process with CPU & RAM
to check port is opened or not
$ netstat -tlnup -> lists tcp opened ports(n) & thier PID(p)


build files for diff langs:
------------------------
package.json --> nodeJS, to check node js version $ node -v
pom.xml --> java
requirements.txt --> python

termination of applications sequence, while provisining its from bottom:
----------------------------------------------------------------------
LB
frontend
backend
DB

AMI:
----
devops-practice -> ec2-user, DevOps321

DB-mysql --> 3306
-------------
$ mysql
$ show databases;
    $ use transactions;
    $ show tables;
    $ select * from transactions;
$ exit

to check app is ruuning or not
-> service command, netstat command, ps -ef command


-> to check server connection:
$ ping -c <no> <ip_addr>
        ex: ping -c 5 google.com

-> to check application on  port
    $ telenet <ip_addr> <port_no>

backend apps usually runs on 8080 port

NodeJS Structure
--------------------
.js files --> java script files
package.json -> developers mention the dependencies and thier version
				it is a build file
server vs client:
-----------------
mysql-server --> this is server
mysql --> client

Linux --> Server
Putty --> SSH client

facebook.com --> http server
browser --> http client

credentials used by our nodejs application to connect
expense
ExpenseApp@1


toptal no ipv4 ips is 2^32

what is proxy?
-----------------
some one on behalf of you == proxy
VPN will change our location to US...
Forward Proxy
----------------
clients are aware of VPN, but servers are not aware
mobile is aware of VPN
    ex: our company laptop uses forward proxy to monitor the traffic

company VPN
---------------
restrict the websites
monitor the user requests

Reverse Proxy
-----------------
clients are not aware of proxy/VPN, only servers are aware
    ex: face book login, here browser not knows about proxy but face book server has reverse proxy
SSL termination
Some secure features


http://54.85.211.179/api/transaction

http://54.85.211.179/api/transaction

{
    "result": [

Domains:
----------
create domain hostinger site cost is less,
in AWS to crete domain  ::   route 53 -> registered domains

transfering domain created in hostinger to AWS:
----------------------------------------------
route 53 -> hosted zones -> add here, after this copy value/route traffic to(name server records)

in hostinger site -> dns nameservers -> change name servers
now in AWS in hosted zones, crete record -> add front end server public ip in value section, ttl 1 sec



DNS servers:
----------
when we click any website first it will go to 
    browser cache -> os cache -> router cache -> ISP, here resolver component fetch the that particulat top level domain(TLD) in their cache


Who owns root servers? --> ICANN (Internet corporation for assigned names and numbers)
----------------------
12 non profit organisations across the world manages these root servers...
13 root servers across the world with many servers in background..
I want IP address for joindevops.com

Root servers
TLD
	.com .net .org .in .us .uk .online .ai .shop .site .edu .org .co .inc
Root server will give the information of .com TLD...
this info will be stored in resolver cache...
it will contact .com TLD....
.com TLD should maintain what is the IP address of joindevops.com

Domain Registars/Providers
---------------------------
godaddy hostinger route53 google 
when you buy a domain in hostinger, they will update .com TLD about your domain, address details, etc.

domain name
address
nameservers

hostinger --> AWS transfer
I updated AWS NS in hostinger...
hostinger will update nameservers to the TLD. Now .online TLD have AWS nameserver details
daws78s.online --> resolver contacts .online TLD
.online TLD will give nameserver details....
resolver will get AWS NS details...
then resolver will contact AWS NS. Then AWS will give A record

fastest automated way
---------------------
without touching the configurations and servers

if you do any config change, you have to restart application...

A record --> IP address of the domain
NS --> authoritive nameservers
SOA --> Ownership record
CNAME(canonical name) --> another domain
MX records --> mail servers

soft link vs hardlink
-----------------------
what is inode?
    inode stores the file metadata actually. 
inode = indexnode
    14950849
    storage location, ownership, permissions, etc.

shortcut --> points to the real location
hard link --> another copy

if I delete main file, can soft link work? no it will not work
if I delete main file , can hard link work? Yes it will work

softlink/symlink is the short cut to the file, if you remove actually symlink will not work...

hardlink is another copy of file, if you remove main file, hard link will work?

does inode of softlink is same as main file? inode is same
    inode is different
does inode of hardlink is same as main file? yes inode is same
    when someone deletes the main file, do you think file storage is deleted?
    NO.. because other hard links are pointing to this

ln == link

Linux Folder Structure
----------------------
/root --> directory for root user
/bin --> binaries, while system is starting these binaries will load
/boot --> When linux system starts, Linux starts boot loading from here
/dev = devices --> hard disk, keyboard, devcices
/etc = extra configuration = /etc/nginx
/home = Linux stores all users in home location
/lib = operating system libraries
/media = cd or dvd drives
/mnt = you can mount other disks
/opt = optional = if you are installing any package manually, prefer opt location
/proc = pid info and processor info
/sbin = admin commands
/tmp = it is temp, not an important
/usr = user commmands, libraries, documents
/var = variables.. mainly log files
###########################
++++++++++++++++++++++
1)proxy setup
2)server connection test


++++++++++++++++++++++++++++
#############################